const http=require("http"),url=require("url"),fs=require("fs"),path=require("path"),env=require("./config/env").config(),cred=require("./config/cred"),theOtherEnv=require("./config/env").getAnotherConfig()[0],port=env.redisPort||1802,jwt=require("jsonwebtoken"),crypto=require("crypto"),rp=require("request-promise"),publicKeyPath="./public/playerPhone.pub",replacedPublicKeyPath="./public/playerPhone.pub.bak",restartFPMSPath="./public/restartFPMS",testKeyPairText="TEST ENCRYPTION";function validateHash(e,t){return e===crypto.createHash("md5").update(t).digest("hex")}http.createServer(function(e,t){console.log(`${e.method} ${e.url}`),t.setHeader("Access-Control-Allow-Origin","*"),t.setHeader("Access-Control-Request-Method","*"),t.setHeader("Access-Control-Allow-Methods","POST, GET, OPTIONS"),t.setHeader("Access-Control-Allow-Headers","*"),t.setHeader("Access-Control-Expose-Headers","Location");const r=url.parse(e.url,!0);let o=`./public${r.pathname}`,s=r.query;if("POST"===e.method)if(e.headers&&e.headers["x-token"])jwt.verify(e.headers["x-token"],env.socketSecret,function(r,s){if(r||!s)console.log("jwt verify error - POST",e.headers["x-token"],env.socketSecret,r),n();else{console.log(`${s.adminName} ${e.method} ${e.url}`);let r,n,i,a,c,l=[];switch(o){case publicKeyPath:console.log("SAVING IN EFFECT KEY PAIR"),e.on("data",e=>{l.push(e)}).on("end",()=>{r=Buffer.concat(l);try{if((n=JSON.parse(r.toString()))&&n.privateKey&&n.publicKey)if(i=crypto.privateEncrypt(n.privateKey,Buffer.from(testKeyPairText,"utf8")),a=crypto.publicDecrypt(n.publicKey,i),(c=a.toString())===testKeyPairText)if(theOtherEnv&&theOtherEnv.redisUrl&&!n.isFromAnotherInstance){let r=theOtherEnv.redisUrl;theOtherEnv.redisPort&&(r+=":"+theOtherEnv.redisPort),r+=e.url,rp({method:"POST",uri:r,headers:{"x-token":e.headers["x-token"]},body:{privateKey:n.privateKey,publicKey:n.publicKey},json:!0}).then(()=>{t.end("Success")})}else t.end("Success");else t.end("Invalid RSA Key Pair!");else t.end("Invalid RSA Key Pair!")}catch(e){console.log("error",e),t.end("Invalid RSA Key Pair!")}});break;case replacedPublicKeyPath:console.log("SAVING REPLACED KEY PAIR"),e.on("data",e=>{l.push(e)}).on("end",()=>{r=Buffer.concat(l);try{if((n=JSON.parse(r.toString()))&&n.privateKey&&n.publicKey)if(i=crypto.privateEncrypt(n.privateKey,Buffer.from(testKeyPairText,"utf8")),a=crypto.publicDecrypt(n.publicKey,i),(c=a.toString())===testKeyPairText)if(theOtherEnv&&theOtherEnv.redisUrl&&!n.isFromAnotherInstance){let r=theOtherEnv.redisUrl;theOtherEnv.redisPort&&(r+=":"+theOtherEnv.redisPort),r+=e.url,rp({method:"POST",uri:r,headers:{"x-token":e.headers["x-token"]},body:{privateKey:n.privateKey,publicKey:n.publicKey},json:!0}).then(()=>{t.end("Success")})}else t.end("Success");else t.end("Invalid RSA Key Pair!");else t.end("Invalid RSA Key Pair!")}catch(e){console.log("error",e),t.end("Invalid RSA Key Pair!")}});break;case restartFPMSPath:if(console.log("REQUEST TO RESTART FPMS"),theOtherEnv&&theOtherEnv.redisUrl){let r=theOtherEnv.redisUrl;theOtherEnv.redisPort&&(r+=":"+theOtherEnv.redisPort),r+=e.url,rp({method:"POST",uri:r,headers:{"x-token":e.headers["x-token"]}}).then(()=>{t.end("Success")})}else t.end("Failed")}}});else{let r,o=[];e.on("data",e=>{o.push(e)}).on("end",async()=>{r=Buffer.concat(o);try{let e=JSON.parse(r.toString());if(e.username&&e.password){let r=await cred.getAdmin(e.username.toLowerCase());if(r)if(validateHash(r.password,e.password)){let e={adminInfo:r,loginTime:new Date};t.end(JSON.stringify({success:!0,token:jwt.sign(e,env.socketSecret)}))}else t.end(JSON.stringify({success:!1,error:{name:"InvalidPassword",message:"Password or user name is not correct!"}}));else t.end(JSON.stringify({success:!1,error:{name:"InvalidPassword",message:"Wrong credential!"}}))}}catch(e){console.log("error",e),t.end(JSON.stringify({success:!1,error:{name:"InvalidPassword",message:"Error occured!"}}))}})}else if("GET"===e.method)switch(o){case"./public/login.html":i(o,t);break;case"./public/static.html":s&&s.token?jwt.verify(s.token,env.socketSecret,function(r,s){r||!s?(console.log("jwt verify error",r),n()):(console.log(`${s.adminName} ${e.method} ${e.url}`),i(o,t))}):n();break;case"./public/static.htm":case"./":n();break;default:i(o,t)}else"OPTIONS"===e.method?t.end():"HEAD"===e.method&&t.end("ok");function n(){t.writeHead(302,{location:"/login.html"}),t.end()}function i(e,t){const r=path.parse(e).ext,o={".ico":"image/x-icon",".html":"text/html",".js":"text/javascript",".json":"application/json",".css":"text/css",".png":"image/png",".jpg":"image/jpeg",".wav":"audio/wav",".mp3":"audio/mpeg",".svg":"image/svg+xml",".pdf":"application/pdf",".doc":"application/msword"};fs.exists(e,function(s){console.log("exist",s),s||(e="public/login.html"),fs.readFile(e,function(e,s){e?(t.statusCode=500,t.end(`Error getting the file: ${e}.`)):(t.setHeader("Content-type",o[r]||"text/plain"),t.end(s))})})}}).listen(parseInt(port)),console.log(`Server listening on port ${port}`);